if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
  silent !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif



call plug#begin('~/.local/share/nvim/plugged')

Plug 'tpope/vim-surround' 
Plug 'scrooloose/nerdcommenter'
Plug 'Yggdroot/indentLine'
Plug 'lukas-reineke/indent-blankline.nvim'
Plug 'junegunn/vim-easy-align'
Plug 'easymotion/vim-easymotion'
Plug 'itchyny/lightline.vim'
Plug 'sheerun/vim-polyglot'
Plug 'wesQ3/vim-windowswap'
Plug 'junegunn/limelight.vim'
Plug 'mbbill/undotree'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'mattn/emmet-vim'
Plug 'chriskempson/base16-vim'
Plug 'luochen1990/rainbow'
Plug 'adelarsq/vim-hackernews'
Plug 'tpope/vim-sensible'
Plug 'junegunn/seoul256.vim'
Plug 'majutsushi/tagbar'
Plug 'ludovicchabant/vim-gutentags'
Plug 'dense-analysis/ale'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-repeat'
"items after this might be deleted
Plug 'wsdjeg/FlyGrep.vim'
Plug 'tpope/vim-five'
Plug 'junegunn/goyo.vim'
Plug 'janko/vim-test'
"Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
call plug#end()

"colorscheme seoul256
"let g:seoul256_background=235

set background=dark

" nerd commenter values

" Create default mappings
let g:NERDCreateDefaultMappings = 1
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

"vim indentLine config
let g:indentLine_char = '▏'

"limelight doesn't support the colorscheme so just makes everything not
"highlighted grey
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240


inoremap jk <Esc>

noremap H ^
noremap L $

noremap J 10j
noremap K 10k

let mapleader=","

set number

if filereadable(expand("~/.vim/vimrc_background"))
	let base16colorspace=256
	source ~/.vim/vimrc_background
endif


set expandtab
set shiftwidth=2
set tabstop=2

filetype plugin indent on

set smartcase
set ignorecase
syntax on


noremap <F9>  :execute "vertical botright copen \| vertical resize 60"<cr>
noremap <F10> :execute "copen \| resize 40"<cr>

let g:go_highlight_build_constraints = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1
let g:go_highlight_types = 1
let g:go_auto_sameids = 1

" Error and warning signs.
let g:ale_sign_error = '⤫'
let g:ale_sign_warning = '⚠'

" Enable integration with airline.
"let g:airline#extensions#ale#enabled = 1

autocmd BufNewFile,BufRead *.shlib set filetype=sh
