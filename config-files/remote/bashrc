#
# ~/.bashrc
#

[[ $- != *i* ]] && return

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null ; then
		if [[ -f ~/.dir_colors ]] ; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]] ; then
			eval $(dircolors -b /etc/DIR_COLORS)
		fi
	fi

	if [[ ${EUID} == 0 ]] ; then
		PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
	else
		PS1='\[\033[01;32m\][\u@\h\[\033[01;37m\] \W\[\033[01;32m\]]\$\[\033[00m\] '
	fi
  
  # enabling colors
	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh

alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano -w PKGBUILD'
alias more=less
# list sise of directories, exclude those under 5k bytes as those are going to be almost or basically empty
alias ldu='du -shc --threshold=5k ./*/ | sort -hr'
alias ll="ls -lah"
alias vim="nvim"
alias mv="mv -vn"
alias ip="ip -c"


xhost +local:root > /dev/null 2>&1

complete -cf sudo

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

shopt -s expand_aliases

# export QT_SELECT=4

# Enable history appending instead of overwriting.  #139609
shopt -s histappend

#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#forground terminal colors
black="\[$(tput setaf 0)\]" # \e[30m
red="\[$(tput setaf 1)\]" # \e[31m
green="\[$(tput setaf 2)\]" # \e[32m
yellow="\[$(tput setaf 3)\]" # \e[33m
blue="\[$(tput setaf 4)\]" # \e[34m
purple="\[$(tput setaf 5)\]" # \e[35m
myGreenCyan="\[$(tput setaf 6)\]" # \e[36m
grey="\[$(tput setaf 7)\]" # \e[37m
defaultColor="\[$(tput setaf 9)\]" # \e[39m

#background terminal colors
backgroundBlack="\[$(tput setaf 0)\]" # \e[40m
backgroundRed="\[$(tput setaf 1)\]" # \e[41m
backgroundGreen="\[$(tput setaf 2)\]" # \e[42m
backgroundYellow="\[$(tput setaf 3)\]" # \e[43m
backgroundBlue="\[$(tput setaf 4)\]" # \e[44m
backgroundPurple="\[$(tput setaf 5)\]" # \e[45m
backgroundMyGreenCyan="\[$(tput setaf 6)\]" # \e[46m
backgroundGrey="\[$(tput setaf 7)\]" # \e[47m
backgroundDefaultColor="\[$(tput setaf 9)\]" # \e[49m

# general terminal text attributes
# if desired with a color attribute then format like:
# \[$bright;$cyan\]
# with the semicolon (;)
reset="\[$(tput sgr0)\]"   # \e[0m;
bright="\[$(tput bold)\]" # \e[1m;
dim="\[$(tput dim)\]" # \e[2m;
italics="\[$(tput smso)\]" # \e[3m;
underscore="\[$(tput smul)\]" # \e[4m;
blink="\[$(tput blink)\]" # \e[5m;

function defaultPrompt () {
export PS1="\
${purple}\A${reset}\
${grey} [${reset}\
${blue}\u${reset}\
${grey}@${reset}\
${yellow}\h${reset}\
${blue} \w${reset}\
${grey}]${reset}\
\n\
             ${myGreenCyan} λ ${reset}"
}
function simplePrompt () {
export PS1="\
${grey}[${reset}\
${blue}\W${reset}\
${grey}]${reset}\
${green} λ ${reset}"
}

function serverPrompt () {
export PS1="\
${purple}\A${reset}\
${grey} [${reset}\
${blue}\u${reset}\
${grey}@${reset}\
${yellow}\h${reset}\
${blue} \w${reset}\
${grey}]${reset}\
\n\
             ${myGreenCyan} λ ${reset}"
}

defaultPrompt
